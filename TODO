1) decoder interface
	a) write a fake decoder plugin interface, to this point we will not
		actually do any loading and such of plugins

2) make play while paused simply unpause and pressing play while playing
	does nothing!

3) play streams
	a) put some sort of error reporting for streaming/inputStream!
	b) fetch metadata and store in DecoderControl and pass to 
		PlayerControl
		1) eventually deal with icy-metadata
		2) parse metadata on the fly in decoders
	c) command for dealing with the changing metadata, currentsonginfo
		or something
	d) in songinfo add a metadata tag item for indicating stream

4) resampling audio for compatibility, and better gapless/crossfading
	a) use resampling from oggenc (is it fast enough for realtime?)

5) when writing combined interface for all decodes to use, be sure to add a 
common function and abstrct dealing with DecoderControl * and put
cycleLogFiles in there, so we cycleLogFiles while decoding, not just when 
decoding has stopped.

6) ACK error codes

7) cleanup main()

8) handle '\n' in filenames

9) compute average replaygain to use for non-replaygain songs

10) pid file


Post-1.0
--------
1) crosslink "list" stuff, for example, artists are crosslinked to alubms and 
vice versa, this way you can do list album artists or list artist albums, this 
will make life easier when we add genre and other metadata

2) rewrite linked list impelmentation to be more flexible
	a) remove "key" stuff
	b) allow assigning a compare function for a list
